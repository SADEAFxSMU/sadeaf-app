- table:
    schema: public
    name: account
  object_relationships:
  - name: admin
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: admin
        column_mapping:
          id: account_id
  - name: client
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: client
        column_mapping:
          id: account_id
  - name: notification_setting
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: notification_setting
        column_mapping:
          id: account_id
  - name: service_requestor
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: service_requestor
        column_mapping:
          id: account_id
  - name: volunteer
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: volunteer
        column_mapping:
          id: account_id
  array_relationships:
  - name: memberships
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: public
          name: membership
  insert_permissions:
  - role: service_requestor
    permission:
      check:
        _and:
        - service_requestor:
            account_id:
              _is_null: true
        - volunteer:
            account_id:
              _is_null: true
        - client:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
        - admin:
            account_id:
              _is_null: true
      columns:
      - contact
      - email
      - name
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - cognito_id
      - contact
      - created_at
      - email
      - id
      - name
      - profile_pic_url
      - role
      - updated_at
      filter: {}
      allow_aggregations: true
  - role: pending
    permission:
      columns:
      - cognito_id
      - contact
      - email
      - id
      - name
      - role
      filter: {}
  - role: service_requestor
    permission:
      columns:
      - cognito_id
      - contact
      - created_at
      - email
      - id
      - name
      - role
      - updated_at
      filter:
        _or:
        - client:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
        - id:
            _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      columns:
      - cognito_id
      - contact
      - created_at
      - email
      - id
      - name
      - role
      - updated_at
      filter: {}
  update_permissions:
  - role: client
    permission:
      columns:
      - contact
      - email
      - name
      filter:
        client:
          id:
            _eq: X-Hasura-User-Id
      check: {}
  - role: service_requestor
    permission:
      columns:
      - contact
      - email
      - name
      filter:
        _and:
        - service_requestor:
            account_id:
              _is_null: true
        - volunteer:
            account_id:
              _is_null: true
        - client:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
        - admin:
            account_id:
              _is_null: true
      check: null
  - role: volunteer
    permission:
      columns:
      - contact
      - email
      - name
      filter:
        volunteer:
          id:
            _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: admin
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
- table:
    schema: public
    name: assignment
  object_relationships:
  - name: attendance
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: attendance
        column_mapping:
          id: assignment_id
  - name: event
    using:
      foreign_key_constraint_on: event_id
  - name: volunteer
    using:
      foreign_key_constraint_on: volunteer_id
  array_relationships:
  - name: volunteer_assignment_opt_ins
    using:
      foreign_key_constraint_on:
        column: assignment_id
        table:
          schema: public
          name: volunteer_assignment_opt_in
  insert_permissions:
  - role: client
    permission:
      check:
        event:
          client:
            account_id:
              _eq: X-Hasura-User-Id
      columns:
      - address_line_one
      - address_line_two
      - end_dt
      - event_id
      - latitude
      - longitude
      - postal
      - room_number
      - start_dt
  - role: service_requestor
    permission:
      check:
        event:
          client:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
      columns:
      - address_line_one
      - address_line_two
      - end_dt
      - event_id
      - latitude
      - longitude
      - postal
      - room_number
      - start_dt
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - address_line_one
      - address_line_two
      - end_dt
      - event_id
      - id
      - latitude
      - longitude
      - postal
      - room_number
      - start_dt
      - status
      - volunteer_id
      filter:
        event:
          client:
            account_id:
              _eq: X-Hasura-User-Id
      allow_aggregations: true
  - role: service_requestor
    permission:
      columns:
      - address_line_one
      - address_line_two
      - end_dt
      - event_id
      - id
      - latitude
      - longitude
      - postal
      - room_number
      - start_dt
      - status
      - volunteer_id
      filter:
        event:
          client:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      columns:
      - address_line_one
      - address_line_two
      - end_dt
      - event_id
      - honorarium_amount
      - id
      - latitude
      - longitude
      - postal
      - room_number
      - start_dt
      - status
      - volunteer_id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: client
    permission:
      columns:
      - address_line_one
      - address_line_two
      - end_dt
      - latitude
      - longitude
      - postal
      - room_number
      - start_dt
      filter:
        event:
          client:
            account_id:
              _eq: X-Hasura-User-Id
      check: {}
  - role: service_requestor
    permission:
      columns:
      - address_line_one
      - address_line_two
      - end_dt
      - id
      - latitude
      - longitude
      - postal
      - room_number
      - start_dt
      filter:
        event:
          client:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
      check: {}
  - role: volunteer
    permission:
      columns:
      - address_line_one
      - address_line_two
      - end_dt
      - id
      - latitude
      - longitude
      - postal
      - room_number
      - start_dt
      - status
      filter:
        volunteer_id:
          _eq: X-Hasura-User-Id
      check: {}
  delete_permissions:
  - role: client
    permission:
      filter:
        event:
          client:
            account_id:
              _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      filter:
        event:
          client:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
- table:
    schema: public
    name: attendance
  object_relationships:
  - name: assignment
    using:
      foreign_key_constraint_on: assignment_id
  insert_permissions:
  - role: client
    permission:
      check:
        assignment:
          event:
            client:
              account_id:
                _eq: X-Hasura-User-Id
      columns:
      - attended
      - dispute_comment
      - has_dispute
      backend_only: false
  - role: service_requestor
    permission:
      check:
        assignment:
          event:
            client:
              account_id:
                _eq: X-Hasura-User-Id
      columns:
      - attended
      - dispute_comment
      - has_dispute
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - attended
      - has_dispute
      - assignment_id
      - id
      - dispute_comment
      filter:
        assignment:
          event:
            client:
              account_id:
                _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      columns:
      - attended
      - has_dispute
      - assignment_id
      - id
      - dispute_comment
      filter:
        assignment:
          event:
            client:
              account_id:
                _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      columns:
      - attended
      - has_dispute
      - assignment_id
      - id
      - dispute_comment
      filter:
        assignment:
          volunteer_id:
            _eq: X-Hasura-User-Id
  update_permissions:
  - role: client
    permission:
      columns:
      - attended
      - dispute_comment
      - has_dispute
      filter:
        assignment:
          event:
            client:
              account_id:
                _eq: X-Hasura-User-Id
      check: null
  - role: service_requestor
    permission:
      columns:
      - attended
      - dispute_comment
      - has_dispute
      filter:
        assignment:
          event:
            client:
              account_id:
                _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: blacklist
  object_relationships:
  - name: client
    using:
      foreign_key_constraint_on: client_account_id
  - name: volunteer
    using:
      foreign_key_constraint_on: volunteer_account_id
  insert_permissions:
  - role: client
    permission:
      check:
        client_account_id:
          _eq: X-Hasura-User-Id
      columns:
      - client_account_id
      - volunteer_account_id
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - client_account_id
      - id
      - volunteer_account_id
      filter:
        client_account_id:
          _eq: X-Hasura-User-Id
  update_permissions:
  - role: client
    permission:
      columns:
      - id
      - volunteer_account_id
      filter:
        client_account_id:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: client
    permission:
      filter:
        client_account_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: client
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: quotation
    using:
      foreign_key_constraint_on: quotation_id
  - name: service_requestor
    using:
      foreign_key_constraint_on: service_requestor_id
  array_relationships:
  - name: blacklists
    using:
      foreign_key_constraint_on:
        column: client_account_id
        table:
          schema: public
          name: blacklist
  - name: events
    using:
      foreign_key_constraint_on:
        column: client_id
        table:
          schema: public
          name: event
  select_permissions:
  - role: client
    permission:
      columns:
      - account_id
      - additional_notes
      - designation
      - id
      - organisation
      - preferred_comm_mode
      - service_requestor_id
      filter:
        account_id:
          _eq: X-Hasura-User-Id
      allow_aggregations: true
  - role: pending
    permission:
      columns:
      - account_id
      - id
      filter: {}
  - role: service_requestor
    permission:
      columns:
      - account_id
      - additional_notes
      - designation
      - id
      - organisation
      - preferred_comm_mode
      - service_requestor_id
      filter:
        service_requestor:
          account_id:
            _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      columns:
      - account_id
      - additional_notes
      - designation
      - id
      - organisation
      - preferred_comm_mode
      - service_requestor_id
      filter: {}
  update_permissions:
  - role: client
    permission:
      columns:
      - additional_notes
      - designation
      - organisation
      - preferred_comm_mode
      - service_requestor_id
      filter:
        account_id:
          _eq: X-Hasura-User-Id
      check: {}
  - role: service_requestor
    permission:
      columns:
      - additional_notes
      - designation
      - organisation
      - preferred_comm_mode
      - service_requestor_id
      filter:
        service_requestor:
          account_id:
            _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: email_information
  object_relationships:
  - name: notification_setting
    using:
      foreign_key_constraint_on: notification_setting_id
  insert_permissions:
  - role: client
    permission:
      check:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      columns:
      - email_address
      backend_only: false
  - role: service_requestor
    permission:
      check:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      columns:
      - email_address
      backend_only: false
  - role: volunteer
    permission:
      check:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      columns:
      - email_address
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - email_address
      - id
      - notification_setting_id
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      columns:
      - id
      - notification_setting_id
      - email_address
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      columns:
      - id
      - notification_setting_id
      - email_address
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
  update_permissions:
  - role: client
    permission:
      columns:
      - email_address
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      check: null
  - role: service_requestor
    permission:
      columns:
      - email_address
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      check: null
  - role: volunteer
    permission:
      columns:
      - email_address
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: event
  object_relationships:
  - name: client
    using:
      foreign_key_constraint_on: client_id
  - name: interpretation_detail
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: interpretation_details
        column_mapping:
          id: event_id
  - name: invoice
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: invoice
        column_mapping:
          id: event_id
  array_relationships:
  - name: assignments
    using:
      foreign_key_constraint_on:
        column: event_id
        table:
          schema: public
          name: assignment
  - name: feedbacks
    using:
      foreign_key_constraint_on:
        column: event_id
        table:
          schema: public
          name: feedback
  computed_fields:
  - name: uncompleted_status
    definition:
      function:
        schema: public
        name: get_uncompleted_status
    comment: Check if event is uncompleted or not. If any assignments within the event
      has a status of NOT "COMPLETE", uncompleted_status == true.
  insert_permissions:
  - role: client
    permission:
      check:
        client:
          account_id:
            _eq: X-Hasura-User-Id
      columns:
      - client_id
      - description
      - name
      - purpose
  - role: service_requestor
    permission:
      check:
        client:
          service_requestor:
            account_id:
              _eq: X-Hasura-User-Id
      columns:
      - client_id
      - description
      - name
      - purpose
  select_permissions:
  - role: client
    permission:
      columns:
      - client_id
      - created_at
      - description
      - id
      - name
      - purpose
      - updated_at
      filter:
        client:
          account_id:
            _eq: X-Hasura-User-Id
      allow_aggregations: true
  - role: service_requestor
    permission:
      columns:
      - client_id
      - created_at
      - description
      - id
      - name
      - purpose
      - updated_at
      filter:
        client:
          service_requestor:
            account_id:
              _eq: X-Hasura-User-Id
      allow_aggregations: true
  - role: volunteer
    permission:
      columns:
      - client_id
      - created_at
      - description
      - id
      - name
      - purpose
      - updated_at
      filter: {}
  update_permissions:
  - role: client
    permission:
      columns:
      - description
      - name
      - purpose
      filter:
        client:
          account_id:
            _eq: X-Hasura-User-Id
      check: null
  - role: service_requestor
    permission:
      columns:
      - client_id
      - description
      - name
      - purpose
      filter:
        client:
          service_requestor:
            account_id:
              _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: client
    permission:
      filter:
        client:
          account_id:
            _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      filter:
        client:
          service_requestor:
            account_id:
              _eq: X-Hasura-User-Id
- table:
    schema: public
    name: feedback
  object_relationships:
  - name: event
    using:
      foreign_key_constraint_on: event_id
  - name: volunteer
    using:
      foreign_key_constraint_on: volunteer_id
  insert_permissions:
  - role: client
    permission:
      check:
        _and:
        - event:
            client:
              account_id:
                _eq: X-Hasura-User-Id
        - volunteer:
            assignments:
              event:
                client_id:
                  _eq: X-Hasura-User-Id
      columns:
      - confidentiality_privacy_preference
      - event_id
      - feedback_given
      - general_feedback
      - live_comments
      - live_information_understanding
      - live_interaction
      - notetaker_conduct
      - notetaker_punctual
      - post_session_comments
      - post_session_understanding
      - training_privacy_preference
      - volunteer_id
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - confidentiality_privacy_preference
      - created_at
      - event_id
      - feedback_given
      - general_feedback
      - id
      - live_comments
      - live_information_understanding
      - live_interaction
      - notetaker_conduct
      - notetaker_punctual
      - post_session_comments
      - post_session_understanding
      - training_privacy_preference
      - updated_at
      - volunteer_id
      filter:
        event:
          client:
            account_id:
              _eq: X-Hasura-User-Id
  update_permissions:
  - role: client
    permission:
      columns:
      - confidentiality_privacy_preference
      - feedback_given
      - general_feedback
      - live_comments
      - live_information_understanding
      - live_interaction
      - notetaker_conduct
      - notetaker_punctual
      - post_session_comments
      - post_session_understanding
      - training_privacy_preference
      - updated_at
      - volunteer_id
      filter:
        event:
          client:
            account_id:
              _eq: X-Hasura-User-Id
      check: {}
- table:
    schema: public
    name: interpretation_details
  object_relationships:
  - name: event
    using:
      foreign_key_constraint_on: event_id
  select_permissions:
  - role: client
    permission:
      columns:
      - allow_trainee_interpreters
      - filming_interpreters
      - event_id
      - id
      - number_of_deaf
      - number_of_hearing
      - sign_system
      filter: {}
  - role: service_requestor
    permission:
      columns:
      - allow_trainee_interpreters
      - filming_interpreters
      - event_id
      - id
      - number_of_deaf
      - number_of_hearing
      - sign_system
      filter: {}
  - role: volunteer
    permission:
      columns:
      - allow_trainee_interpreters
      - filming_interpreters
      - event_id
      - id
      - number_of_deaf
      - number_of_hearing
      - sign_system
      filter: {}
- table:
    schema: public
    name: invoice
  object_relationships:
  - name: event
    using:
      foreign_key_constraint_on: event_id
- table:
    schema: public
    name: membership
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: membership_type
    using:
      foreign_key_constraint_on: membership_type_id
  array_relationships:
  - name: membership_renewals
    using:
      foreign_key_constraint_on:
        column: membership_id
        table:
          schema: public
          name: membership_renewals
  - name: service_requestors
    using:
      foreign_key_constraint_on:
        column: membership_id
        table:
          schema: public
          name: service_requestor
  insert_permissions:
  - role: client
    permission:
      check:
        account_id:
          _eq: X-Hasura-User-Id
      columns:
      - account_id
      backend_only: false
  - role: service_requestor
    permission:
      check:
        _or:
        - account:
            client:
              service_requestor:
                account_id:
                  _eq: X-Hasura-User-Id
        - account_id:
            _eq: X-Hasura-User-Id
      columns:
      - account_id
      - membership_type_id
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - account_id
      - id
      - membership_type_id
      - free_sessions_remaining
      - created_at
      - updated_at
      - status
      filter:
        account_id:
          _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      columns:
      - account_id
      - id
      - membership_type_id
      - free_sessions_remaining
      - created_at
      - updated_at
      - status
      filter:
        _or:
        - account:
            client:
              service_requestor:
                account_id:
                  _eq: X-Hasura-User-Id
        - account_id:
            _eq: X-Hasura-User-Id
  update_permissions:
  - role: client
    permission:
      columns:
      - membership_type_id
      filter:
        account_id:
          _eq: X-Hasura-User-Id
      check: null
  - role: service_requestor
    permission:
      columns:
      - membership_type_id
      filter:
        _or:
        - account:
            client:
              service_requestor:
                account_id:
                  _eq: X-Hasura-User-Id
        - account_id:
            _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: membership_renewals
  object_relationships:
  - name: membership
    using:
      foreign_key_constraint_on: membership_id
  select_permissions:
  - role: client
    permission:
      columns:
      - created_at
      - id
      - membership_id
      filter:
        membership:
          account_id:
            _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      columns:
      - id
      - membership_id
      - created_at
      filter:
        _or:
        - membership:
            account:
              service_requestor:
                account_id:
                  _eq: X-Hasura-User-Id
        - membership:
            account:
              client:
                service_requestor:
                  account_id:
                    _eq: X-Hasura-User-Id
- table:
    schema: public
    name: membership_type
  array_relationships:
  - name: memberships
    using:
      foreign_key_constraint_on:
        column: membership_type_id
        table:
          schema: public
          name: membership
  select_permissions:
  - role: client
    permission:
      columns:
      - id
      - name
      - cost
      - duration_in_days
      - description
      filter: {}
  - role: service_requestor
    permission:
      columns:
      - duration_in_days
      - id
      - cost
      - description
      - name
      filter: {}
  - role: volunteer
    permission:
      columns:
      - duration_in_days
      - id
      - cost
      - description
      - name
      filter: {}
- table:
    schema: public
    name: notification_setting
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: email_information
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: email_information
        column_mapping:
          id: notification_setting_id
  - name: telegram_information
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: telegram_information
        column_mapping:
          id: notification_setting_id
  insert_permissions:
  - role: client
    permission:
      check:
        account_id:
          _eq: X-Hasura-User-Id
      set:
        account_id: x-hasura-User-Id
      columns:
      - account_id
      backend_only: false
  - role: service_requestor
    permission:
      check:
        _or:
        - account:
            client:
              service_requestor:
                account_id:
                  _eq: X-Hasura-User-Id
        - account:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
      columns:
      - account_id
      backend_only: false
  - role: volunteer
    permission:
      check:
        account_id:
          _eq: X-Hasura-User-Id
      set:
        account_id: x-hasura-User-Id
      columns:
      - account_id
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - account_id
      - id
      filter:
        account_id:
          _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      columns:
      - account_id
      - id
      filter:
        _or:
        - account:
            client:
              service_requestor:
                account_id:
                  _eq: X-Hasura-User-Id
        - account:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      columns:
      - id
      - account_id
      filter:
        account_id:
          _eq: X-Hasura-User-Id
  delete_permissions:
  - role: client
    permission:
      filter:
        account_id:
          _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      filter:
        _or:
        - account:
            client:
              service_requestor:
                account_id:
                  _eq: X-Hasura-User-Id
        - account:
            service_requestor:
              account_id:
                _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      filter:
        account_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: quotation
- table:
    schema: public
    name: service_requestor
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: membership
    using:
      foreign_key_constraint_on: membership_id
  array_relationships:
  - name: clients
    using:
      foreign_key_constraint_on:
        column: service_requestor_id
        table:
          schema: public
          name: client
  select_permissions:
  - role: client
    permission:
      columns:
      - account_id
      - id
      - membership_id
      - organisation
      filter:
        clients:
          account_id:
            _eq: X-Hasura-User-Id
  - role: pending
    permission:
      columns:
      - account_id
      - id
      filter: {}
  - role: service_requestor
    permission:
      columns:
      - account_id
      - id
      - membership_id
      - organisation
      filter:
        account_id:
          _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      columns:
      - account_id
      - id
      - membership_id
      - organisation
      filter: {}
  update_permissions:
  - role: service_requestor
    permission:
      columns:
      - organisation
      filter:
        account_id:
          _eq: X-Hasura-User-Id
      check: {}
- table:
    schema: public
    name: telegram_information
  object_relationships:
  - name: notification_setting
    using:
      foreign_key_constraint_on: notification_setting_id
  insert_permissions:
  - role: client
    permission:
      check:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      columns:
      - chat_id
      backend_only: false
  - role: service_requestor
    permission:
      check:
        _or:
        - notification_setting:
            account_id:
              _eq: X-Hasura-User-Id
        - notification_setting:
            account:
              client:
                service_requestor:
                  account_id:
                    _eq: X-Hasura-User-Id
      columns:
      - chat_id
      backend_only: false
  - role: volunteer
    permission:
      check:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      columns:
      - chat_id
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - id
      - chat_id
      - notification_setting_id
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      columns:
      - id
      - notification_setting_id
      - chat_id
      filter:
        _or:
        - notification_setting:
            account_id:
              _eq: X-Hasura-User-Id
        - notification_setting:
            account:
              client:
                service_requestor:
                  account_id:
                    _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      columns:
      - id
      - notification_setting_id
      - chat_id
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
  update_permissions:
  - role: client
    permission:
      columns:
      - chat_id
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      check: null
  - role: service_requestor
    permission:
      columns:
      - chat_id
      filter:
        _or:
        - notification_setting:
            account_id:
              _eq: X-Hasura-User-Id
        - notification_setting:
            account:
              client:
                service_requestor:
                  account_id:
                    _eq: X-Hasura-User-Id
      check: null
  - role: volunteer
    permission:
      columns:
      - chat_id
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: client
    permission:
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
  - role: service_requestor
    permission:
      filter:
        _or:
        - notification_setting:
            account_id:
              _eq: X-Hasura-User-Id
        - notification_setting:
            account:
              client:
                service_requestor:
                  account_id:
                    _eq: X-Hasura-User-Id
  - role: volunteer
    permission:
      filter:
        notification_setting:
          account_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: volunteer
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  array_relationships:
  - name: assignments
    using:
      foreign_key_constraint_on:
        column: volunteer_id
        table:
          schema: public
          name: assignment
  - name: blacklists
    using:
      foreign_key_constraint_on:
        column: volunteer_account_id
        table:
          schema: public
          name: blacklist
  - name: feedbacks
    using:
      foreign_key_constraint_on:
        column: volunteer_id
        table:
          schema: public
          name: feedback
  - name: volunteer_assignment_opt_ins
    using:
      foreign_key_constraint_on:
        column: volunteer_id
        table:
          schema: public
          name: volunteer_assignment_opt_in
  select_permissions:
  - role: client
    permission:
      columns:
      - account_id
      - id
      filter: {}
  - role: pending
    permission:
      columns:
      - account_id
      - id
      filter: {}
  - role: service_requestor
    permission:
      columns:
      - account_id
      filter: {}
  - role: volunteer
    permission:
      columns:
      - account_id
      - approval_status
      - id
      filter: {}
- table:
    schema: public
    name: volunteer_assignment_opt_in
  object_relationships:
  - name: assignment
    using:
      foreign_key_constraint_on: assignment_id
  - name: volunteer
    using:
      foreign_key_constraint_on: volunteer_id
  insert_permissions:
  - role: volunteer
    permission:
      check: {}
      columns:
      - assignment_id
      - status
      - volunteer_id
      backend_only: false
  select_permissions:
  - role: client
    permission:
      columns:
      - assignment_id
      - created_at
      - id
      - volunteer_id
      filter: {}
  - role: volunteer
    permission:
      columns:
      - assignment_id
      - created_at
      - id
      - status
      - volunteer_id
      filter: {}
  update_permissions:
  - role: volunteer
    permission:
      columns:
      - status
      filter: {}
      check: null
  delete_permissions:
  - role: volunteer
    permission:
      filter: {}
